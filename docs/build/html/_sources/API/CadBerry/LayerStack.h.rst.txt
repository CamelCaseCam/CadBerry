CadBerry/LayerStack.h
#####################
Stores the layers being rendered by the CadBerry renderer. While this is only used by the Window class, you can include it in viewports added by 
modules if you want to. 

Imports
=======
* :doc:`API\CadBerry\Core.h`
* :doc:`API\CadBerry\Layer.h`
* vector

LayerStack class
================
Contains a stack of layers and overlays. Can be iterated over like a vector. 

Functions
---------
void PushLayer(Layer* layer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Calls the layer's OnAttach function and pushes it onto the layer stack underneath the overlay layers.

void PushOverlay(Layer* layer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Calls the Layer's OnAttach function and pushes it on top of all the other layers as an overlay. 

void PopLayer(Layer* layer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^
Calls the layer's OnDetach function and removes any copies of it from the layer stack. 

void PopOverlay(Layer* overlay)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Calls the layer's OnDetach function and removes any copies of it from the layer stack. You need to use PopOverlay for overlays and PopLayer for 
layers so that the LayerStack knows which layers are overlays and where to insert new layers

Fields
------
std::vector<Layer*> Layers (private)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
The vector containing the layers

unsigned int LayerInsertIndex (private)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
The index at which new layers should be inserted so that overlays stay on top. 