CadBerry/Rendering/VertexArray.h
################################
Wrapper around OpenGL vertex array

Imports
=======
* :doc:`/API/CadBerry/Core.h`
* :doc:`/API/CadBerry/Rendering/Buffer.h`
* :doc:`/API/CadBerry/Utils/memory.h`

VertexArray class
=================
Interface for API-specific VertexArray implementation

Functions
---------
virtual void Bind()
^^^^^^^^^^^^^^^^^^^
Binds the vertex array

virtual void Unbind()
^^^^^^^^^^^^^^^^^^^^^
Unbinds the vertex array

virtual void AddVertexBuffer(VertexBuffer* vertexBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Adds the vertex buffer and takes ownership of it

virtual void SetIndexBuffer(IndexBuffer* indexBuffer)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Sets the index buffer and takes ownership of it. If the VertexArray already has an IndexBuffer, the old one will be deleted

virtual const std::vector<scoped_ptr<VertexBuffer>>& GetVertexBuffers()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Returns a reference to the vertex buffers

virtual const IndexBuffer* BorrowIndexBuffer()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Returns the a pointer to the VertexBuffer's IndexBuffer. As a reminder, the VertexBuffer maintains ownership of the IndexBuffer, so you shouldn't 
delete it. 

static VertexArray* Create()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Creates the API-specific VertexArray implementation