# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  GLFW_config = debug
  CDBRNA_config = debug
  Glad_config = debug
  ImGui_config = debug
  WhereAmI_config = debug
  CadBerry_config = debug
  Berry_config = debug
  CadBerry_updater_config = debug
  VSCodeIntegration_config = debug
  GILBuildEngine_config = debug
  utils_config = debug
  sensing_config = debug
  Core_config = debug
  IRESGenerator_config = debug

else ifeq ($(config),release)
  GLFW_config = release
  CDBRNA_config = release
  Glad_config = release
  ImGui_config = release
  WhereAmI_config = release
  CadBerry_config = release
  Berry_config = release
  CadBerry_updater_config = release
  VSCodeIntegration_config = release
  GILBuildEngine_config = release
  utils_config = release
  sensing_config = release
  Core_config = release
  IRESGenerator_config = release

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := GLFW CDBRNA Glad ImGui WhereAmI CadBerry Berry CadBerry_updater VSCodeIntegration GILBuildEngine utils sensing Core IRESGenerator

.PHONY: all clean help $(PROJECTS) 

all: $(PROJECTS)

GLFW:
ifneq (,$(GLFW_config))
	@echo "==== Building GLFW ($(GLFW_config)) ===="
	@${MAKE} --no-print-directory -C CadBerry/vendor/GLFW -f Makefile config=$(GLFW_config)
endif

CDBRNA:
ifneq (,$(CDBRNA_config))
	@echo "==== Building CDBRNA ($(CDBRNA_config)) ===="
	@${MAKE} --no-print-directory -C CadBerry/vendor/RNAstructure/CDBRNA -f Makefile config=$(CDBRNA_config)
endif

Glad:
ifneq (,$(Glad_config))
	@echo "==== Building Glad ($(Glad_config)) ===="
	@${MAKE} --no-print-directory -C CadBerry/vendor/Glad -f Makefile config=$(Glad_config)
endif

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C CadBerry/vendor/IMGUI -f Makefile config=$(ImGui_config)
endif

WhereAmI:
ifneq (,$(WhereAmI_config))
	@echo "==== Building WhereAmI ($(WhereAmI_config)) ===="
	@${MAKE} --no-print-directory -C CadBerry/vendor/WhereAmI -f Makefile config=$(WhereAmI_config)
endif

CadBerry: Glad ImGui WhereAmI CDBRNA GLFW
ifneq (,$(CadBerry_config))
	@echo "==== Building CadBerry ($(CadBerry_config)) ===="
	@${MAKE} --no-print-directory -C CadBerry -f Makefile config=$(CadBerry_config)
endif

Berry: CadBerry
ifneq (,$(Berry_config))
	@echo "==== Building Berry ($(Berry_config)) ===="
	@${MAKE} --no-print-directory -C Berry -f Makefile config=$(Berry_config)
endif

CadBerry_updater:
ifneq (,$(CadBerry_updater_config))
	@echo "==== Building CadBerry_updater ($(CadBerry_updater_config)) ===="
	@${MAKE} --no-print-directory -C CadBerry_updater -f Makefile config=$(CadBerry_updater_config)
endif

VSCodeIntegration: CadBerry ImGui
ifneq (,$(VSCodeIntegration_config))
	@echo "==== Building VSCodeIntegration ($(VSCodeIntegration_config)) ===="
	@${MAKE} --no-print-directory -C Modules/VSCodeIntegration -f Makefile config=$(VSCodeIntegration_config)
endif

GILBuildEngine: CadBerry ImGui
ifneq (,$(GILBuildEngine_config))
	@echo "==== Building GILBuildEngine ($(GILBuildEngine_config)) ===="
	@${MAKE} --no-print-directory -C GILBuildEngine -f Makefile config=$(GILBuildEngine_config)
endif

utils: CadBerry ImGui GILBuildEngine
ifneq (,$(utils_config))
	@echo "==== Building utils ($(utils_config)) ===="
	@${MAKE} --no-print-directory -C utils -f Makefile config=$(utils_config)
endif

sensing: CadBerry ImGui GILBuildEngine
ifneq (,$(sensing_config))
	@echo "==== Building sensing ($(sensing_config)) ===="
	@${MAKE} --no-print-directory -C sensing -f Makefile config=$(sensing_config)
endif

Core: CadBerry ImGui GLFW
ifneq (,$(Core_config))
	@echo "==== Building Core ($(Core_config)) ===="
	@${MAKE} --no-print-directory -C Modules/Core -f Makefile config=$(Core_config)
endif

IRESGenerator: CadBerry ImGui GLFW GILBuildEngine CDBRNA
ifneq (,$(IRESGenerator_config))
	@echo "==== Building IRESGenerator ($(IRESGenerator_config)) ===="
	@${MAKE} --no-print-directory -C Modules/IRESGenerator -f Makefile config=$(IRESGenerator_config)
endif

clean:
	@${MAKE} --no-print-directory -C CadBerry/vendor/GLFW -f Makefile clean
	@${MAKE} --no-print-directory -C CadBerry/vendor/RNAstructure/CDBRNA -f Makefile clean
	@${MAKE} --no-print-directory -C CadBerry/vendor/Glad -f Makefile clean
	@${MAKE} --no-print-directory -C CadBerry/vendor/IMGUI -f Makefile clean
	@${MAKE} --no-print-directory -C CadBerry/vendor/WhereAmI -f Makefile clean
	@${MAKE} --no-print-directory -C CadBerry -f Makefile clean
	@${MAKE} --no-print-directory -C Berry -f Makefile clean
	@${MAKE} --no-print-directory -C CadBerry_updater -f Makefile clean
	@${MAKE} --no-print-directory -C Modules/VSCodeIntegration -f Makefile clean
	@${MAKE} --no-print-directory -C GILBuildEngine -f Makefile clean
	@${MAKE} --no-print-directory -C utils -f Makefile clean
	@${MAKE} --no-print-directory -C sensing -f Makefile clean
	@${MAKE} --no-print-directory -C Modules/Core -f Makefile clean
	@${MAKE} --no-print-directory -C Modules/IRESGenerator -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   GLFW"
	@echo "   CDBRNA"
	@echo "   Glad"
	@echo "   ImGui"
	@echo "   WhereAmI"
	@echo "   CadBerry"
	@echo "   Berry"
	@echo "   CadBerry_updater"
	@echo "   VSCodeIntegration"
	@echo "   GILBuildEngine"
	@echo "   utils"
	@echo "   sensing"
	@echo "   Core"
	@echo "   IRESGenerator"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"