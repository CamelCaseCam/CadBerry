# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
PCH = src/gilpch.h
PCH_PLACEHOLDER = $(OBJDIR)/$(notdir $(PCH))
GCH = $(PCH_PLACEHOLDER).gch
INCLUDES += -I../CadBerry/vendor/spdlog/include -I../CadBerry/src -Isrc -I../CadBerry/vendor/IMGUI -I../CadBerry/vendor/BlockingCollection -I../CadBerry/vendor/glm -I../CadBerry/vendor/implot
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -fPIC -std=c++20
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
ALL_LDFLAGS += $(LDFLAGS) -L/usr/lib64 -Wl,-rpath,'$$ORIGIN/../CadBerry' -m64 -shared -Wl,-soname=libGILBuildEngine.so -s
LINKCMD = $(CXX) -o "$@" $(OBJECTS) $(RESOURCES) $(ALL_LDFLAGS) $(LIBS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-linux-x86_64/GILBuildEngine
TARGET = $(TARGETDIR)/libGILBuildEngine.so
OBJDIR = ../bin/Debug-linux-x86_64/GILBuildEngine
DEFINES += -DGIL_BUILD_DLL -DCDB_PLATFORM_LINUX -DGLFW_INCLUDE_NONE -DIMGUI_IMPL_OPENGL_LOADER_GLAD2 -DFMT_HEADER_ONLY -DCDB_DEBUG
LIBS += ../bin/Debug-linux-x86_64/CadBerry/libCadBerry.so ../CadBerry/vendor/IMGUI/bin/Debug-linux-x86_64/ImGui/libImGui.a
LDDEPS += ../bin/Debug-linux-x86_64/CadBerry/libCadBerry.so ../CadBerry/vendor/IMGUI/bin/Debug-linux-x86_64/ImGui/libImGui.a

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-linux-x86_64/GILBuildEngine
TARGET = $(TARGETDIR)/libGILBuildEngine.so
OBJDIR = ../bin/Release-linux-x86_64/GILBuildEngine
DEFINES += -DGIL_BUILD_DLL -DCDB_PLATFORM_LINUX -DGLFW_INCLUDE_NONE -DIMGUI_IMPL_OPENGL_LOADER_GLAD2 -DFMT_HEADER_ONLY -DCDB_RELEASE
LIBS += ../bin/Release-linux-x86_64/CadBerry/libCadBerry.so ../CadBerry/vendor/IMGUI/bin/Release-linux-x86_64/ImGui/libImGui.a
LDDEPS += ../bin/Release-linux-x86_64/CadBerry/libCadBerry.so ../CadBerry/vendor/IMGUI/bin/Release-linux-x86_64/ImGui/libImGui.a

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/API.o
GENERATED += $(OBJDIR)/Bool.o
GENERATED += $(OBJDIR)/BoolContext.o
GENERATED += $(OBJDIR)/CodonEncoding.o
GENERATED += $(OBJDIR)/Compiler.o
GENERATED += $(OBJDIR)/Errors.o
GENERATED += $(OBJDIR)/GBSequence.o
GENERATED += $(OBJDIR)/Lexer.o
GENERATED += $(OBJDIR)/LexerMacros.o
GENERATED += $(OBJDIR)/LexerTokens.o
GENERATED += $(OBJDIR)/Operation.o
GENERATED += $(OBJDIR)/OutputTypes.o
GENERATED += $(OBJDIR)/Project.o
GENERATED += $(OBJDIR)/Region.o
GENERATED += $(OBJDIR)/RestrictionSites.o
GENERATED += $(OBJDIR)/SaveFunctions.o
GENERATED += $(OBJDIR)/Sequence.o
GENERATED += $(OBJDIR)/Token.o
GENERATED += $(OBJDIR)/Utils.o
GENERATED += $(OBJDIR)/gilpch.o
OBJECTS += $(OBJDIR)/API.o
OBJECTS += $(OBJDIR)/Bool.o
OBJECTS += $(OBJDIR)/BoolContext.o
OBJECTS += $(OBJDIR)/CodonEncoding.o
OBJECTS += $(OBJDIR)/Compiler.o
OBJECTS += $(OBJDIR)/Errors.o
OBJECTS += $(OBJDIR)/GBSequence.o
OBJECTS += $(OBJDIR)/Lexer.o
OBJECTS += $(OBJDIR)/LexerMacros.o
OBJECTS += $(OBJDIR)/LexerTokens.o
OBJECTS += $(OBJDIR)/Operation.o
OBJECTS += $(OBJDIR)/OutputTypes.o
OBJECTS += $(OBJDIR)/Project.o
OBJECTS += $(OBJDIR)/Region.o
OBJECTS += $(OBJDIR)/RestrictionSites.o
OBJECTS += $(OBJDIR)/SaveFunctions.o
OBJECTS += $(OBJDIR)/Sequence.o
OBJECTS += $(OBJDIR)/Token.o
OBJECTS += $(OBJDIR)/Utils.o
OBJECTS += $(OBJDIR)/gilpch.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking GILBuildEngine
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning GILBuildEngine
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/API.o: src/API.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Bool.o: src/GIL/Bools/Bool.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BoolContext.o: src/GIL/Bools/BoolContext.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/CodonEncoding.o: src/GIL/Compiler/CodonEncoding.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Compiler.o: src/GIL/Compiler/Compiler.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/GBSequence.o: src/GIL/Compiler/GBSequence.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Errors.o: src/GIL/Errors.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Lexer.o: src/GIL/Lexer/Lexer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LexerMacros.o: src/GIL/Lexer/LexerMacros.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/LexerTokens.o: src/GIL/Lexer/LexerTokens.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Token.o: src/GIL/Lexer/Token.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/OutputTypes.o: src/GIL/OutputTypes.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Operation.o: src/GIL/Parser/Operation.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Project.o: src/GIL/Parser/Project.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Region.o: src/GIL/Parser/Region.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Sequence.o: src/GIL/Parser/Sequence.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RestrictionSites.o: src/GIL/RestrictionSites.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SaveFunctions.o: src/GIL/SaveFunctions.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Utils.o: src/GIL/Utils/Utils.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/gilpch.o: src/gilpch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) -include $(PCH_PLACEHOLDER) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif